version: "3.5"

services:
  database:
    build:
      dockerfile: Dockerfile-postgres-decoderbufs-wal2json
      context: docker
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_tcb_main
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "develop@totvs.com.br"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - "8099:80"
    depends_on:
      - database
  app:
    image: maven:3.5-jdk-8
    depends_on:
      - database
    volumes:
      - ./:/tcb-web
      - ~/.m2:/root/.m2
    ports:
      - 8080:8080
    working_dir: /tcb-web
    environment:
      - spring_profiles_active=dev
    command: mvn clean spring-boot:run
  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
      - database
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
  connect-debezium:
    image: debezium/connect:0.9
    ports:
      - 8083:8083
    links:
      - zookeeper
      - database
      - kafka
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      BOOTSTRAP_SERVERS: kafka:9092
      #- KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      #- VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      #- CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      #- CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
    depends_on:
      - zookeeper
      - kafka
      - database
